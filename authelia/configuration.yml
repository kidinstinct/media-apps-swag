###############################################################
#                   Authelia configuration                    #
###############################################################

host: 0.0.0.0
port: 9091
log_level: warn
log_file_path: /config/authelia.log

#
# Configuration options specific to the internal http server
server:
  # Buffers usually should be configured to be the same value.
  # Explanation at https://docs.authelia.com/configuration/server.html
  # Read buffer size configures the http server's maximum incoming request size in bytes.
  read_buffer_size: 4096
  # Write buffer size configures the http server's maximum outgoing response size in bytes.
  write_buffer_size: 4096
  # Set the single level path Authelia listens on, must be alphanumeric chars and should not contain any slashes.
  # path: 'authelia'

# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE
# I used this site to generate the secret: https://www.grc.com/passwords.htm
# jwt_secret: SECRET_GOES_HERE # use docker secret file instead AUTHELIA_JWT_SECRET_FILE

# https://docs.authelia.com/configuration/miscellaneous.html#default-redirection-url
default_redirection_url: https://authelia.YOURDOMAIN.COM/

totp:
  issuer: authelia.com
  period: 30
  skew: 1

# Enable the following for Duo Push Notification support
# https://www.authelia.com/docs/features/2fa/push-notifications.html
#duo_api:
#  hostname: api-123456789.example.com
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: # use docker secret file instead AUTHELIA_DUO_API_SECRET_KEY_FILE

authentication_backend:
  # Disable both the HTML element and the API for reset password functionality
  disable_reset_password: false

  # The amount of time to wait before we refresh data from the authentication backend. Uses duration notation.
  # To disable this feature set it to 'disable', this will slightly reduce security because for Authelia, users
  # will always belong to groups they belonged to at the time of login even if they have been removed from them in LDAP.
  # To force update on every request you can set this to '0' or 'always', this will increase processor demand.
  # See the below documentation for more information.
  # Duration Notation docs:  https://docs.authelia.com/configuration/index.html#duration-notation-format
  # Refresh Interval docs: https://docs.authelia.com/configuration/authentication/ldap.html#refresh-interval
  refresh_interval: 5m

  # LDAP backend configuration.
  #
  # This backend allows Authelia to be scaled to more
  # than one instance and therefore is recommended for
  # production.
  ldap:
    # The LDAP implementation, this affects elements like the attribute utilised for resetting a password.
    # Acceptable options are as follows:
    # - 'activedirectory' - For Microsoft Active Directory.
    # - 'custom' - For custom specifications of attributes and filters.
    # This currently defaults to 'custom' to maintain existing behaviour.
    #
    # Depending on the option here certain other values in this section have a default value, notably all
    # of the attribute mappings have a default value that this config overrides, you can read more
    # about these default values at https://docs.authelia.com/configuration/authentication/ldap.html#defaults
    #implementation: custom

    # The url to the ldap server. Scheme can be ldap:// or ldaps://
    url: ldaps://<LDAP-SERVER-IP>

    # Skip verifying the server certificate (to allow self-signed certificate).
    skip_verify: true

    # The base dn for every entries
    base_dn: dc=<INT>,dc=<YOUR-DOMAIN>,dc=<COM>

    # The attribute holding the username of the user. This attribute is used to populate
    # the username in the session information. It was introduced due to #561 to handle case
    # insensitive search queries.
    # For you information, Microsoft Active Directory usually uses 'sAMAccountName' and OpenLDAP
    # usually uses 'uid'
    # Beware that this attribute holds the unique identifiers for the users binding the user and the configuration
    # stored in database. Therefore only single value attributes are allowed and the value
    # must never be changed once attributed to a user otherwise it would break the configuration
    # for that user. Technically, non-unique attributes like 'mail' can also be used but we don't recommend using
    # them, we instead advise to use the attributes mentioned above (sAMAccountName and uid) to follow
    # https://www.ietf.org/rfc/rfc2307.txt.
    username_attribute: uid

    # An additional dn to define the scope to all users
    additional_users_dn: cn=users

    # The users filter used in search queries to find the user profile based on input filled in login form.
    # Various placeholders are available to represent the user input and back reference other options of the configuration:
    # - {input} is a placeholder replaced by what the user inputs in the login form.
    # - {username_attribute} is a mandatory placeholder replaced by what is configured in `username_attribute`.
    # - {mail_attribute} is a placeholder replaced by what is configured in `mail_attribute`.
    # - DON'T USE - {0} is an alias for {input} supported for backward compatibility but it will be deprecated in later versions, so please don't use it.
    #
    # Recommended settings are as follows:
    # - Microsoft Active Directory: (&({username_attribute}={input})(objectCategory=person)(objectClass=user))
    # - OpenLDAP: (&({username_attribute}={input})(objectClass=person))' or '(&({username_attribute}={input})(objectClass=inetOrgPerson))
    #
    # To allow sign in both with username and email, one can use a filter like
    # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    users_filter: (&({username_attribute}={input})(objectClass=person))

    # An additional dn to define the scope of groups
    additional_groups_dn: cn=groups

    # The groups filter used in search queries to find the groups of the user.
    # - {input} is a placeholder replaced by what the user inputs in the login form.
    # - {username} is a placeholder replace by the username stored in LDAP (based on `username_attribute`).
    # - {dn} is a matcher replaced by the user distinguished name, aka, user DN.
    # - {username_attribute} is a placeholder replaced by what is configured in `username_attribute`.
    # - {mail_attribute} is a placeholder replaced by what is configured in `mail_attribute`.
    # - DON'T USE - {0} is an alias for {input} supported for backward compatibility but it will be deprecated in later versions, so please don't use it.
    # - DON'T USE - {1} is an alias for {username} supported for backward compatibility but it will be deprecated in later version, so please don't use it.
    groups_filter: (&(member={dn})(objectclass=groupOfNames))

    # The attribute holding the name of the group
    group_name_attribute: cn

    # The attribute holding the mail address of the user. If multiple email addresses are defined for a user, only the first
    # one returned by the LDAP server is used.
    mail_attribute: mail

    # The attribute holding the display name of the user. This will be used to greet an authenticated user.
    # display_name_attribute: displayname

    # The username and password of the admin user.
    # You need this information from your LDAP server, not all are the same
    user: uid=root,cn=users,dc=<INT>,dc=<YOUR-DOMAIN>,dc=<COM>
    # Password can also be set using a secret: https://docs.authelia.com/configuration/secrets.html
    # password: password

  # ------------------------------------------------------------------------------------------------
  # Uncomment below section for a simpler file based authentication, make sure the files have
  # appropriate permissions to restrict snooping of data.
  # ------------------------------------------------------------------------------------------------
  # file:
  #   path: /config/users_database.yml
  #   # ----------------------------------------------------------------------------------------------
  #   # Has a password with docker run authelia/authelia:latest authelia hash-password <YOURPASSWORD>
  #   # customize passwords based on https://docs.authelia.com/configuration/authentication/file.html
  #   # ----------------------------------------------------------------------------------------------
  #   password:
  #     algorithm: argon2id
  #     iterations: 1
  #     salt_length: 16
  #     parallelism: 8
  #     # blocks this much of the RAM. Tune this.
  #     memory: 1024

# https://docs.authelia.com/configuration/access-control.html
access_control:
  default_policy: deny
  rules:
    # ----------------------------------------------------------------------------------------------
    # Policies below bypass oauth as for api calls
    # ----------------------------------------------------------------------------------------------
    # BAZARR
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'bazarr.YOURDOMAIN.COM'
        - 'bazarr-4k.YOURDOMAIN.COM'
      resources:
        - '^(/bazarr(-4k)?)?/api/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # JACKETT
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'jackett.YOURDOMAIN.COM'
      resources:
        - '^(/jackett)?/(api|dl)/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # NZBHYDRA2
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'nzbhydra.YOURDOMAIN.COM'
        - 'nzbhydra2.YOURDOMAIN.COM'
      resources:
        - '^(/nzbhydra(2)?)?/(api|getnzb|gettorrent|rss|torznab).*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # LIDARR
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'lidarr.YOURDOMAIN.COM'
      resources:
        - '^(/lidarr)?/api/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # OMBI
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'ombi.YOURDOMAIN.COM'
        - 'ombi-4k.YOURDOMAIN.COM'
      resources:
        - '^(/ombi(-4k))?/(api|swagger)/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # READARR
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'readarr.YOURDOMAIN.COM'
      resources:
        - '^(/readarr)?/api/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # RADARR
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'radarr.YOURDOMAIN.COM'
        - 'radarr-4k.YOURDOMAIN.COM'
      resources:
        - '^(/radarr(-4k)?)?/api/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # SONARR
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'sonarr.YOURDOMAIN.COM'
        - 'sonarr-4k.YOURDOMAIN.COM'
      resources:
        - '^(/sonarr(-4k)?)?/api/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # SABNZBD
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'sabnzbd.YOURDOMAIN.COM'
      resources:
        - '^/sabnzbd/api/.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # NZBGET
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'nzbget.YOURDOMAIN.COM'
      resources:
        - '^(/nzbget)?(/[^\/:]*:[^\/]*)?/(jsonrpc|jsonprpc|xmlrpc).*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # PORTAINER
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'portainer.YOURDOMAIN.COM'
      resources:
        - '^(/portainer)?/api/websocket.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # QBITTORRENT
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'qbittorrent.YOURDOMAIN.COM'
      resources:
        - '^(/qbittorrent)?/api.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # TAUTULLI
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'tautulli.YOURDOMAIN.COM'
        - 'tautulli-4k.YOURDOMAIN.COM'
      resources:
        - '^(/tautulli(-4k)?)?/api.*$'
      policy: bypass
    # ----------------------------------------------------------------------------------------------
    # end bypass policies
    # ----------------------------------------------------------------------------------------------
    # ----------------------------------------------------------------------------------------------
    # MAIN DOMAIN SECTION
    # ----------------------------------------------------------------------------------------------
    - domain:
        - 'YOURDOMAIN.COM'
        - 'authelia.YOURDOMAIN.COM'
      resources:
        - '^(/authelia).*$'
      policy: bypass
    - domain: '*.YOURDOMAIN.COM'
      policy: two_factor
    - domain: 'YOURDOMAIN.COM'
      policy: two_factor

session:
  name: authelia_session
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  # Used a different secret, but the same site as jwt_secret above.
  # secret: SECRET_GOES_HERE # use docker secret file instead AUTHELIA_SESSION_SECRET_FILE
  # The time in seconds before the cookie expires and session is reset.
  expiration: 1h
  # The inactivity time in seconds before the session is reset.
  inactivity: 5m
  # The remember me duration.
  # Value of 0 disables remember me.
  # Value is in seconds, or duration notation. See: https://docs.authelia.com/configuration/index.html#duration-notation-format
  # Longer periods are considered less secure because a stolen cookie will last longer giving attackers more time to spy
  # or attack. Currently the default is 1M or 1 month.
  remember_me_duration: 1w
  domain: YOURDOMAIN.COM # Should match whatever your root protected domain is
  # Optional. Can improve performance on a busy system. If not enabled, session info is stored in memory.
  redis:
    host: authredis
    port: 6379
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
    # password: ${REDIS_PASSWORD}

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  # For local storage, uncomment lines below and comment out mysql. https://docs.authelia.com/configuration/storage/sqlite.html
  # local:
  #     path: /config/db.sqlite3
  mysql:
    # MySQL allows running multiple authelia instances. Create database and enter details below.
    host: authmariadb
    port: 3306
    database: authelia
    username: authelia

notifier:
  smtp:
    username: YOUR_EMAIL_SERVER_USER
    # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
    # password: # use docker secret file instead AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
    host: SMTP_SERVER
    port: SMTP_SERVER_PORT
    sender: YOUR_FROM_EMAIL_ADDRESS
# For testing purpose, notifications can be sent in a file. Be sure map the volume in docker-compose.
# filesystem:
# filename: /tmp/authelia/notification.txt
